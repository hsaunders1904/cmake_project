#!groovy

pipeline {

  agent any

  stages {

    stage('Build') {
      steps {
        script {
          if(isUnix()) {
            sh './tools/build.sh'
          }
        }
      }
   }

    stage('Test') {
      steps {
        sh './tools/test.sh'

        // archive CTest results file
        archiveArtifacts(
          artifacts: 'build/Testing/**/*.xml',
          fingerprint: true
        )

        // tell xUnit plugin to process the test results
        xunit (
          testTimeMargin: '3000',
          thresholdMode: 1,
          thresholds: [
            skipped(failureThreshold: '0'),
            failed(failureThreshold: '0')
          ],
          tools: [
            CTest(
              pattern: 'build/Testing/**/*.xml',
              deleteOutputFiles: true,
              failIfNotNew: false,
              skipNoTestFiles: true,
              stopProcessingIfError: true
            )
          ]
        )
      }
    }

    stage('Package') {
      steps {
        sh './tools/package.sh'
        archiveArtifacts(
          artifacts: 'build/*.tar.gz',
          fingerprint: true
        )
      }
    }

  }  // stages

  post {
    always {
      deleteDir()
    }
    // success {

    // }
    // failure {

    // }
  }  // post

}  // pipeline
